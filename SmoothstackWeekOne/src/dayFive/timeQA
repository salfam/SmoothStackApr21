1. Which class would you use to store your birthday in years, months, days, seconds, and nanoseconds?
LocalDateTime class. It tracks date and time to the nanosecond and can be used with Period to convert to normal date format.

2. Given a random date, how would you find the date of the previous Thursday?
Use TemporalAdjuster.previous(DayOfWeek.THURSDAY)

3. What is the difference between a ZoneId and a ZoneOffset?
Both ZoneId and ZoneOffset track an offset from Greenwich/UTC time, but the ZoneOffset class tracks only the absolute offset from Greenwich/UTC. 
The ZoneId class also uses the ZoneRules to determine how an offset varies for a particular time of year and region.

4. How would you convert an Instant to a ZonedDateTime? How would you convert a ZonedDateTime to an Instant?
You can convert an Instant to a ZonedDateTime by using the ZonedDateTime.ofInstant method. You also need to supply a ZoneId:
ZonedDateTime zdt = ZonedDateTime.ofInstant(Instant.now(),ZoneId.systemDefault());
You can use the toInstant method in the ChronoZonedDateTime interface, implemented by the ZonedDateTime class, to convert from a ZonedDateTime to an Instant:
Instant inst = ZonedDateTime.now().toInstant();